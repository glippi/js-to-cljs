{"version":3,"sources":["frontend/views.cljs"],"mappings":";AAOA,wBAAA,xBAAMA;AAAN,AAAA,0FAAA,6EAAA,mFAAA,uHAAA,sCAAA,mFAAA,4FAAA;;AAKA,uCAAA,vCAAMC,sFAAuBC;AAA7B,AAAA,0FAAA,0GAAA,mFAAA,wIAAA,2CAAA,qDAAA,KAAA,6DAAA;AAAA,AAE2E,8BAAA,mFAAA,uGAAA,AAAAC,jNAACC,iOAAmCF;WAF/G,mFAAA,8FAAA;;AAIA,iCAAA,jCAAMI,0EAAiBJ;AAAvB,AAAA,0FAAA,qJAAA,iHAAA,mFAAA,oMAAA,2CAAA,kDAAA,UAAA,qDAAA,UAAA,+DAAA,WAAAG,riBAEIL;AAFJ,AAI+C,OAACO,sBAAOL,KAAK,AAAA,AAAAG;mBAJ5D,mFAKIJ,qCAAsBC;;AAI1B,oCAAA,pCAAMM,gFAAoBC;AAA1B,AAAA,0FAAA,iKAEM,oCAAA,AAAA,mFAAA,8IAAA,nPAAMA,0NACmCA;;AAE/C,wBAAA,xBAAMC;AAAN,AAAA,0FAAA,+LAAA,mFAAA,qDAAA,gBAAA,mFAAA,kFAAA,2CAAA,qDAAA,oCAAA,kBAAA,mFAAA,qDAAA,gBAAA,mFAAA,gEAAA;;AAOA,sBAAA,tBAAMC;AAAN,AACE,IAAMT,OAAK,gDAAA,hDAACU;uBAAZ,AAAAT,nBACMM,mCAAkB,sDAAA,mFAAA,zIAACI;AADzB,AAAA,0FAAA,sHAAA,+HAAA,8IAAA,1LAGIP,+BAAgBJ,gGAChBM,kCAAmBC,4GACnBC","names":["frontend.views/header","frontend.views/transform-code-button","text","cljs.core/deref","re-frame.core/dispatch","p1__26005#","frontend.views/javascript-code","cljs.core/reset!","frontend.views/clojurescript-code","transformed-code","frontend.views/footer","frontend.views/main","reagent.core.atom","re_frame.core.subscribe"],"sourcesContent":["(ns frontend.views\n  (:require\n    [reagent.core :as r]\n    [re-frame.core :refer [subscribe dispatch]]\n    [frontend.events :as events]\n    [frontend.subs :as subs]))\n\n(defn header []\n     [:header.sans-serif\n      [:h1.f2.lh-title.fw9.mb3.mt0.pt3.bt.bw2 \"JavaScript To ClojureScript\"]\n      [:h2.f3.mid-gray.lh-title \"Transform your JS source to Cljs!\"]])\n\n(defn transform-code-button [text]\n [:div.mv4.absolute.left-0.tracked\n    [:a.link.br.bw2.b--black.pa3.bg-red.white.b.ttc {:href \"#0\" :on-click #(dispatch [::events/transform-code @text])} [:span.ml6.underline-hover \"transform code\"]]])\n\n(defn javascript-code [text]\n  [:div.fl.fl-ns.w-50.pa1.bg-white.h-100.br2.br--left-ns\n   [header]\n   [:textarea.h5.db.border-box.hover-black.w-100.ba.b--black-20.pa2.br2.mb2.code\n    {:id \"js-code\" :name \"js-code\" :on-change #(reset! text (-> % .-target .-value))}]\n   [transform-code-button text]])\n   \n\n  \n(defn clojurescript-code [transformed-code]\n     [:div.fl.fl-ns.w-50.bg-light-blue.h-100.pa1.br2.br--right-ns\n      (when transformed-code\n        [:p.ph3.f5.lh-copy.measure.mt0-ns.code transformed-code])]) \n\n(defn footer []\n  [:footer.absolute.bottom-0.left-0.bg-black.washed-blue.w-100.pv1.i.garamond\n   [:span \"from \"]\n   [:a.link.washed-blue {:href \"https://github.com/glippi\"} \"glippi \"]\n   [:span \"with \"]\n   [:span.red.b \"\u03bbove\"]])\n\n(defn main []\n  (let [text (r/atom \"\")\n        transformed-code @(subscribe [::subs/transformed-code])]\n    [:article.vh-100.ph3.ph5-ns.pv5.bg-blue\n     [javascript-code text]\n     [clojurescript-code transformed-code]\n     [footer]]))\n"]}